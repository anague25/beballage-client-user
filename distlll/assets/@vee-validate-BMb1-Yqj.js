/**
  * vee-validate v4.13.2
  * (c) 2024 Abdelrahman Awad
  * @license MIT
  */const m={en:/^[A-Z]*$/i,cs:/^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,da:/^[A-ZÆØÅ]*$/i,de:/^[A-ZÄÖÜß]*$/i,es:/^[A-ZÁÉÍÑÓÚÜ]*$/i,fr:/^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,it:/^[A-Z\xC0-\xFF]*$/i,lt:/^[A-ZĄČĘĖĮŠŲŪŽ]*$/i,nl:/^[A-ZÉËÏÓÖÜ]*$/i,hu:/^[A-ZÁÉÍÓÖŐÚÜŰ]*$/i,pl:/^[A-ZĄĆĘŚŁŃÓŻŹ]*$/i,pt:/^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,ru:/^[А-ЯЁ]*$/i,kz:/^[А-ЯЁ\u04D8\u04B0\u0406\u04A2\u0492\u04AE\u049A\u04E8\u04BA]*$/i,sk:/^[A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ]*$/i,sr:/^[A-ZČĆŽŠĐ]*$/i,sv:/^[A-ZÅÄÖ]*$/i,tr:/^[A-ZÇĞİıÖŞÜ]*$/i,uk:/^[А-ЩЬЮЯЄІЇҐ]*$/i,ar:/^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/,az:/^[A-ZÇƏĞİıÖŞÜ]*$/i,ug:/^[A-Zچۋېرتيۇڭوپھسداەىقكلزشغۈبنمژفگخجۆئ]*$/i},v=e=>{if(e)return Array.isArray(e)?e[0]:e.locale};function T(e,i){return Array.isArray(e)?e[0]:e[i]}function d(e){return!!(e==null||e===""||Array.isArray(e)&&e.length===0)}const j=(e,i)=>{if(d(e))return!0;const t=v(i);if(Array.isArray(e))return e.every(r=>j(r,{locale:t}));const n=String(e);return t?(m[t]||m.en).test(n):Object.keys(m).some(r=>m[r].test(n))},b=/^(?!\.)(?!.*\.\.)([A-Z0-9_+-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,q=e=>d(e)?!0:Array.isArray(e)?e.every(i=>b.test(String(i))):b.test(String(e)),x=(e,i)=>{if(d(e))return!0;const t=T(i,"length");return Array.isArray(e)?e.every(n=>x(n,{length:t})):[...String(e)].length<=Number(t)},O=(e,i)=>{if(d(e))return!0;const t=T(i,"length");return Array.isArray(e)?e.every(n=>O(n,{length:t})):[...String(e)].length>=Number(t)},S=/^[٠١٢٣٤٥٦٧٨٩]+$/,L=/^[0-9]+$/,R=e=>{if(d(e))return!0;const i=t=>{const n=String(t);return L.test(n)||S.test(n)};return Array.isArray(e)?e.every(i):i(e)};function w(e){return e==null}function E(e){return Array.isArray(e)&&e.length===0}const B=e=>w(e)||E(e)||e===!1?!1:!!String(e).trim().length;/**
  * vee-validate v4.13.2
  * (c) 2024 Abdelrahman Awad
  * @license MIT
  */function y(e){return typeof e=="function"}function V(e){return typeof e=="object"&&e!==null}function N(e){return e==null?e===void 0?"[object Undefined]":"[object Null]":Object.prototype.toString.call(e)}function $(e){if(!V(e)||N(e)!=="[object Object]")return!1;if(Object.getPrototypeOf(e)===null)return!0;let i=e;for(;Object.getPrototypeOf(i)!==null;)i=Object.getPrototypeOf(i);return Object.getPrototypeOf(e)===i}function _(e,i){return Object.keys(i).forEach(t=>{if($(i[t])&&$(e[t])){e[t]||(e[t]={}),_(e[t],i[t]);return}e[t]=i[t]}),e}function p(e,i,t){const{prefix:n,suffix:r}=t,a=new RegExp("([0-9]:)?".concat(n,"([^").concat(r,"]+)").concat(r),"g");return e.replace(a,function(f,s,l){if(!s||!i.params)return l in i?i[l]:i.params&&l in i.params?i.params[l]:"".concat(n).concat(l).concat(r);if(!Array.isArray(i.params))return l in i.params?i.params[l]:"".concat(n).concat(l).concat(r);const o=Number(s.replace(":",""));return o in i.params?i.params[o]:"".concat(s).concat(n).concat(l).concat(r)})}class z{constructor(i,t,n={prefix:"{",suffix:"}"}){this.container={},this.locale=i,this.interpolateOptions=n,this.merge(t)}resolve(i,t){return this.format(this.locale,i,t)}getLocaleDefault(i,t){var n,r,a,f,s;return((a=(r=(n=this.container[i])===null||n===void 0?void 0:n.fields)===null||r===void 0?void 0:r[t])===null||a===void 0?void 0:a._default)||((s=(f=this.container[i])===null||f===void 0?void 0:f.messages)===null||s===void 0?void 0:s._default)}resolveLabel(i,t,n){var r,a,f,s;return n?((a=(r=this.container[i])===null||r===void 0?void 0:r.names)===null||a===void 0?void 0:a[n])||n:((s=(f=this.container[i])===null||f===void 0?void 0:f.names)===null||s===void 0?void 0:s[t])||t}format(i,t,n){var r,a,f,s,l;let o;const{rule:u,form:A,label:Z,name:c}=t,h=this.resolveLabel(i,c,Z);return u?(o=((f=(a=(r=this.container[i])===null||r===void 0?void 0:r.fields)===null||a===void 0?void 0:a[c])===null||f===void 0?void 0:f[u.name])||((l=(s=this.container[i])===null||s===void 0?void 0:s.messages)===null||l===void 0?void 0:l[u.name]),o||(o=this.getLocaleDefault(i,c)||"".concat(h," is not valid")),y(o)?o(t):p(o,Object.assign(Object.assign({},A),{field:h,params:u.params}),n!=null?n:this.interpolateOptions)):(o=this.getLocaleDefault(i,c)||"".concat(h," is not valid"),y(o)?o(t):p(o,Object.assign(Object.assign({},A),{field:h}),n!=null?n:this.interpolateOptions))}merge(i){_(this.container,i)}}const g=new z("en",{});function C(e,i,t){const n=r=>g.resolve(r,t);return g.locale=e,i&&g.merge({[e]:i}),n}const D="en",P={_default:"The {field} is not valid",alpha:"The {field} field may only contain alphabetic characters",alpha_num:"The {field} field may only contain alpha-numeric characters",alpha_dash:"The {field} field may contain alpha-numeric characters as well as dashes and underscores",alpha_spaces:"The {field} field may only contain alphabetic characters as well as spaces",between:"The {field} field must be between 0:{min} and 1:{max}",confirmed:"The {field} field confirmation does not match",digits:"The {field} field must be numeric and exactly contain 0:{length} digits",dimensions:"The {field} field must be 0:{width} pixels by 1:{height} pixels",email:"The {field} field must be a valid email",not_one_of:"The {field} field is not a valid value",ext:"The {field} field is not a valid file",image:"The {field} field must be an image",integer:"The {field} field must be an integer",length:"The {field} field must be 0:{length} long",max_value:"The {field} field must be 0:{max} or less",max:"The {field} field may not be greater than 0:{length} characters",mimes:"The {field} field must have a valid file type",min_value:"The {field} field must be 0:{min} or more",min:"The {field} field must be at least 0:{length} characters",numeric:"The {field} field may only contain numeric characters",one_of:"The {field} field is not a valid value",regex:"The {field} field format is invalid",required_if:"The {field} field is required",required:"The {field} field is required",size:"The {field} field size must be less than 0:{size}KB",url:"The {field} field is not a valid URL"},I={code:D,messages:P};export{q as a,x as b,j as c,I as e,C as l,O as m,R as n,B as r};
